---
title: "<br><br>Git & GitHub for <br>Scientific Collaboration"
format: 
  revealjs:
    slide-number: true
    preview-links: auto
    smaller: false
    scrollable: true
    title-slide-attributes:
      data-background-image: Git-Logo-2Color.png
      data-background-size: contain
      data-background-opacity: '0.2'
      data-background-position: top
editor_options: 
  chunk_output_type: inline
---

# Git

## A History of Git

- Invented by Linus Torvalds in 2005 for maintenence of Linux kernel
- Git means idiot or fool
- Complexity required for remote and local tracking of changes

Goals of the new system:
- Speed
- Simple design
- Strong support for non-linear development (thousands of parallel branches)
- Fully distributed
- Able to handle large projects like the Linux kernel efficiently (speed and data size)



:::{.notes}
http://git-scm.com/book/en/v2/
::: 


## Why use Git?

- Three States
   - *Modified* means that you have changed the file <br> but have not committed it to your database yet.
   - *Staged* means that you have marked a modified file <br> to go into your next commit snapshot.
   - *Committed* means data is safely stored in local database.
- Analogy: track-changes in word document
- Remote repo: accessed & updated by anyone at anytime
- Solutions for merging sets of changes

![](progit2.png){.absolute top=0 right=0  height="200"} 

[ProGit Book](http://git-scm.com/book/en/v2/Getting-Started-What-is-Git%3F)

::: {background-opacity="0.1"  background-iframe="https://git-scm.com/docs" style="text-align: left; margin-top: 1em"}
## [Git Commands](https://git-scm.com/docs){preview-link="true" style="text-align: center"}
:::


::: {background-opacity="0.1"  background-iframe="http://git-scm.com/book/en/v2/Git-Basics-Recording-Changes-to-the-Repository" style="text-align: left; margin-top: 1em"}
## [Git Commands](http://git-scm.com/book/en/v2/Git-Basics-Recording-Changes-to-the-Repository){preview-link="true" style="text-align: center"}
:::

## Repositories

You typically obtain a Git repository in one of two ways:
- Initializing a Repository
- Cloning an Existing Repository

# GitHub

## GitHub
- just one variant of remote-repository 
- Documentation and added features
- Project Organization tools
- Security: public vs pivate 
- organizations & teams

## Repos

- remote-repositories 
- cloning vs forking
- tracking changes
- commits
- main/local
- branches
- merges

## Getting Started with GH Desktop

[GHD](https://desktop.github.com)

[Github Desktop Setup](https://docs.github.com/en/desktop/installing-and-configuring-github-desktop/overview/creating-your-first-repository-using-github-desktop#part-1-installing-github-desktop-and-authenticating-your-account)

![](GHDesktop.png)

## Issues

- This is where the organization & development happens.
   - 
   - `@` mention collaborators
   - `#` followed by part of the issue title to link related issues in the same repository
   - Create and assign a new branch for an issue (When pull-request; issue closed?)
   - You can use GitHub Discussions to ask and answer questions, share information, make announcements, and conduct or participate in conversations about a project.
   


https://docs.github.com/en/issues/tracking-your-work-with-issues/quickstart
https://docs.github.com/en/issues/tracking-your-work-with-issues/creating-an-issue
https://docs.github.com/en/issues/tracking-your-work-with-issues/creating-a-branch-for-an-issue

::: {.notes}

When you mention an issue in another issue or pull request, the issue's timeline reflects the cross-reference so that you can keep track of related work. To indicate that work is in progress, you can link an issue to a pull request. When the pull request merges, the linked issue automatically closes.

::: 

## Discussions 

## Pull-Requests

- at some point consolidation of work needs to happen

## Teams and Code Review

- teams for sub-components of larger projects
- teams in classroom
- programmatic system of team organization

## Version Control for Open Science

- MNE
- FieldTrip

# Webpages and Wikis

- built-in GitHub wikis
- hosting slides
- hosting webpages
- verson control with additional hosting


# CodeSpaces

---


https://training.github.com/downloads/github-git-cheat-sheet/
